name: CD
on:
  - push
  - pull_request

jobs:
  build-win:
    name: win build (msys2)
    if: github.event_name == 'push'
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v2
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: git make mingw-w64-x86_64-toolchain mingw-w64-x86_64-qt6-base mingw-w64-x86_64-qt6-declarative mingw-w64-x86_64-qt6-svg mingw-w64-x86_64-qt6-5compat  mingw-w64-x86_64-qt6-tools  mingw-w64-x86_64-nsis zip unzip
      - name: poppler
        run: |
          pacman -U --noconfirm ./.github/scripts/mingw-w64-x86_64-poppler*
      - name: Configure
        run: qmake-qt6 texstudio.pro CONFIG-=debug MXE=1 BUILD_ADWAITA=1 STRIP=1
      - name: Build
        run: make -j 2
      - name: Package
        id: package
        run: |
          . ./.github/scripts/get-version.sh
          ./.github/scripts/package_msys.sh
          echo "::set-output name=VERSION_NAME::${VERSION_NAME}"
          echo "::set-output name=TXS_VERSION::${TXS_VERSION}"
          echo "::set-output name=GIT_VERSION::${GIT_VERSION}"

      - name: Upload zip to GitHub Artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: texstudio-win-qt6-zip
          path: ./package-zip/texstudio-win-qt6-${{ steps.package.outputs.VERSION_NAME }}.zip
          
      - name: Upload to GitHub Artifacts
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v2
        with:
          name: texstudio-win-qt6-exe
          path: texstudio-win-qt6-${{ steps.package.outputs.VERSION_NAME }}.exe
        
      - name: Release exe
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
          files: |
            texstudio-${{ steps.package.outputs.GIT_VERSION }}-win-qt6.exe
            texstudio-${{ steps.package.outputs.GIT_VERSION }}-win-portable-qt6.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}

  build-linux-win:
    name: win build (mxe)
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch tag annotations
      run: git fetch --tags --force

    - name: Add mxe.cc repo
      run: |
        sudo apt-key adv \
        --keyserver keyserver.ubuntu.com \
        --recv-keys 86B72ED9 
        sudo add-apt-repository \
          "deb [arch=amd64] https://pkg.mxe.cc/repos/apt `lsb_release -sc` main" 
      
    - name: Updates
      run: sudo apt-get update

    - name: Dependencies
      run: |
        sudo apt-get install mxe-x86-64-w64-mingw32.shared-cairo \
             mxe-x86-64-w64-mingw32.shared-curl \
             mxe-x86-64-w64-mingw32.shared-freetype \
             mxe-x86-64-w64-mingw32.shared-glib \
             mxe-x86-64-w64-mingw32.shared-jpeg \
             mxe-x86-64-w64-mingw32.shared-lcms \
             mxe-x86-64-w64-mingw32.shared-libpng \
             mxe-x86-64-w64-mingw32.shared-libwebp \
             mxe-x86-64-w64-mingw32.shared-openjpeg \
             mxe-x86-64-w64-mingw32.shared-poppler \
             mxe-x86-64-w64-mingw32.shared-qtbase \
             mxe-x86-64-w64-mingw32.shared-qtdeclarative \
             mxe-x86-64-w64-mingw32.shared-qttools \
             mxe-x86-64-w64-mingw32.shared-tiff \
             mxe-x86-64-w64-mingw32.shared-zlib \
             mxe-x86-64-w64-mingw32.static-nsis

    - name: Configure
      run: |
        MXEDIR="/usr/lib/mxe"
        MXETARGET="x86_64-w64-mingw32.shared"
        PATH=$PATH:${MXEDIR}/usr/bin
        . ./.github/scripts/get-version.sh
        sed -i win.rc -Ee "s/0,[0,]+/$(tr <<<"$TXS_VERSION" . ,),0/"
        sed -i win.rc -e "s/git[\]0/$VERSION_NAME/"
        $MXEDIR/usr/bin/${MXETARGET}-qmake-qt5 texstudio.pro CONFIG-=debug MXE=1 BUILD_ADWAITA=1 STRIP=1

    - name: Build
      run: |
        MXEDIR="/usr/lib/mxe"
        MXETARGET="x86_64-w64-mingw32.shared"
        PATH=$PATH:${MXEDIR}/usr/bin
        make -j 2
      
    - name: Package
      id: package
      run: |
        MXEDIR="/usr/lib/mxe"
        MXETARGET="x86_64-w64-mingw32.shared"
        PATH=$PATH:${MXEDIR}/usr/bin
        . ./.github/scripts/get-version.sh
        .github/scripts/package_win.sh
        echo "::set-output name=VERSION_NAME::${VERSION_NAME}"
        echo "::set-output name=TXS_VERSION::${TXS_VERSION}"
        echo "::set-output name=GIT_VERSION::${GIT_VERSION}"
        
    - name: Upload zip to GitHub Artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: texstudio-win-zip
        path: ./package-zip/texstudio-win-${{ steps.package.outputs.VERSION_NAME }}.zip
        
    - name: Upload to GitHub Artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: texstudio-win-exe
        path: texstudio-win-${{ steps.package.outputs.VERSION_NAME }}.exe
        
    - name: Release exe
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        files: |
          texstudio-${{ steps.package.outputs.GIT_VERSION }}-win-qt5.exe
          texstudio-${{ steps.package.outputs.GIT_VERSION }}-win-portable-qt5.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        
     
###################################

  build-linux-release:
    name: linux appimage
    if: github.event_name == 'push'
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch tag annotations
      run: git fetch --tags --force

    - name: Updates
      run: sudo apt-get update

    - name: Dependencies
      run: sudo apt-get install qtbase5-dev qt5-default qt5-qmake libqt5svg5-dev qtdeclarative5-dev qttools5-dev libqt5svg5-dev libpoppler-qt5-dev libpoppler-cpp-dev pkg-config zlib1g-dev 

    - name: Configure
      run: qmake texstudio.pro CONFIG-=debug

    - name: Build
      run: make -j 2
      
    - name: Package
      id: package
      run: |
        POPPLERDATA_VERSION="0.4.8"
        POPPLERDATA_SUBDIR="poppler-data-${POPPLERDATA_VERSION}"
        POPPLERDATA_FILE="poppler-data-${POPPLERDATA_VERSION}.tar.gz"
        POPPLERDATA_URL="https://poppler.freedesktop.org/${POPPLERDATA_FILE}"
        POPPLERDATA_SHA256="1096a18161f263cccdc6d8a2eb5548c41ff8fcf9a3609243f1b6296abdf72872"
        . ./.github/scripts/get-version.sh
        . ./.github/scripts/package_linux.sh
        echo "::set-output name=VERSION_NAME::${VERSION_NAME}"
        echo "::set-output name=VERSION::${VERSION}"
        echo "::set-output name=TXS_VERSION::${TXS_VERSION}"
        echo "::set-output name=GIT_VERSION::${GIT_VERSION}"        
        
    - name: Upload to Github Artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: texstudio-linux
        path: texstudio-linux-${{ steps.package.outputs.VERSION_NAME }}-x86_64.AppImage
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        files: texstudio-${{ steps.package.outputs.GIT_VERSION }}-x86_64.AppImage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
   
     
############################
      
  macosx:
    name: Mac OS X
    runs-on: macos-10.15

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch tag annotations
      run: git fetch --tags --force

    - name: Install Dependencies
      run: |
        # /usr/local/bin/2to3 is symlinked to the native python2 installation
        # but prevents the homebrew install from succeeding
        rm -f /usr/local/bin/2to3
        brew update > brew_update.log || { echo "::error::Updating homebrew failed"; cat brew_update.log; exit 1; }
        # install poppler with qt6
        brew install poppler

    - name: Configure
      run: /usr/local/opt/qt6/bin/qmake texstudio.pro CONFIG-=debug

    - name: Build
      run: make -j 2

    - name: Workarounds
      run: |
        python2 ./.github/scripts/fixRpath.py /usr/local/opt/qt/lib
        mkdir -p texstudio.app/Contents/PlugIns/imageformats
        cp /usr/local/opt/qt/share/qt/plugins/imageformats/libqsvg.dylib texstudio.app/Contents/PlugIns/imageformats
        mkdir -p texstudio.app/Contents/Frameworks
        cp /usr/local/lib/libbrotlicommon.1.dylib texstudio.app/Contents/Frameworks

    - name: Package
      id: package
      run: |
        /usr/local/opt/qt6/bin/macdeployqt texstudio.app -dmg
        . ./.github/scripts/get-version.sh
        cp texstudio.dmg texstudio-${GIT_VERSION}-osx.dmg
        mv texstudio.dmg texstudio-osx-${VERSION_NAME}.dmg
        echo "::set-output name=VERSION_NAME::${VERSION_NAME}"
        echo "::set-output name=TXS_VERSION::${TXS_VERSION}"
        echo "::set-output name=GIT_VERSION::${GIT_VERSION}"
        
    - name: Upload to Github artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: texstudio-osx
        path: texstudio-osx-${{ steps.package.outputs.VERSION_NAME }}.dmg
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        files: texstudio-${{ steps.package.outputs.GIT_VERSION }}-osx.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
        
  macosx-qt5:
    name: Mac OS X (Qt5)
    if: github.event_name == 'push'
    runs-on: macos-10.15

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Fetch tag annotations
      run: git fetch --tags --force

    - name: Install Dependencies
      run: |
        # /usr/local/bin/2to3 is symlinked to the native python2 installation
        # but prevents the homebrew install from succeeding
        rm -f /usr/local/bin/2to3
        brew update > brew_update.log || { echo "::error::Updating homebrew failed"; cat brew_update.log; exit 1; }
        # install poppler with qt6
        brew install poppler-qt5

    - name: Configure
      run: |
        export PKG_CONFIG_PATH="/usr/local/opt/poppler-qt5/lib/pkgconfig"
        /usr/local/opt/qt5/bin/qmake texstudio.pro CONFIG-=debug

    - name: Build
      run: |
        export PKG_CONFIG_PATH="/usr/local/opt/poppler-qt5/lib/pkgconfig"
        make -j 2

    - name: Workarounds
      if: false
      run: |
        python2 ./.github/scripts/fixRpath.py /usr/local/opt/qt/lib
        mkdir -p texstudio.app/Contents/PlugIns/imageformats
        cp /usr/local/opt/qt/share/qt/plugins/imageformats/libqsvg.dylib texstudio.app/Contents/PlugIns/imageformats
        mkdir -p texstudio.app/Contents/Frameworks
        cp /usr/local/lib/libbrotlicommon.1.dylib texstudio.app/Contents/Frameworks

    - name: Package
      id: package
      run: |
        /usr/local/opt/qt5/bin/macdeployqt texstudio.app -dmg
        . ./.github/scripts/get-version.sh
        cp texstudio.dmg texstudio-${GIT_VERSION}-osx-qt5.dmg
        mv texstudio.dmg texstudio-osx-qt5-${VERSION_NAME}.dmg
        echo "::set-output name=VERSION_NAME::${VERSION_NAME}"
        echo "::set-output name=TXS_VERSION::${TXS_VERSION}"
        echo "::set-output name=GIT_VERSION::${GIT_VERSION}"
        
    - name: Upload to Github artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v2
      with:
        name: texstudio-osx-qt5
        path: texstudio-osx-qt5-${{ steps.package.outputs.VERSION_NAME }}.dmg
        
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        files: texstudio-${{ steps.package.outputs.GIT_VERSION }}-osx-qt5.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUBTOKEN }}
   


